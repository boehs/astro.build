---
import Page from '../layouts/Page.astro';
import Card from '../components/blog/Card.astro';
import Panel from '../components/Panel.astro'
import { Markdown } from 'astro/components';
let issues = []
let contributemd: Response | String = await fetch('https://raw.githubusercontent.com/withastro/astro/main/CONTRIBUTING.md')
contributemd = await contributemd.text()
---

<Page title="Contribute">
    <header>
        <h1 class="title text-gradient">Contribute</h1>
        <p></p>
    </header>

    <ul role="list" class="posts">
        <Panel size="md">
            <details title="First Rodeo?" class="article">
                <Markdown>
                    {contributemd}
                </Markdown>
            </details>
        </Panel>
        {issues.map(issue => {
            return (
                <li class="post">

                    <Card post={issue} variant="summary" />
                </li>
            )
        })}
    </ul>
</Page>

<style>
    header {
        padding: 3rem 2rem 2rem;
        width: 100%;
        max-width: 64rem;
        flex-grow: 1;
    }
    h1.title {
        font-family: var(--font-display);
        --fill: var(--gradient-pop-1);
        font-size: var(--size-900);
    }
    .posts {
        width: 100%;
        max-width: 64rem;
        padding: 2rem;
        padding-bottom: 4rem;
        display: flex;
        flex-flow: column nowrap;
        font-family: var(--font-body);
        font-size: var(--size-500);
        line-height: 1.3;
        color: var(--color-midnight);
    }
    .post + .post {
        margin-top: 4rem;
    }
    .post {
        position: relative;
        display: flex;
        flex-flow: row wrap;
        padding: 3rem 2rem;
        margin-left: -2rem;
        margin-right: -2rem;
        background: white;
        box-shadow: var(--shadow-md);
        border-radius: var(--corner-md);
        font-family: var(--font-body);
        font-size: var(--size-500);
        line-height: 1.3;
        color: var(--color-midnight);
    }
    .post:hover,
    .post:focus-within {
        background: linear-gradient(to top, var(--color-dawn), white);
    }
    :is(.post:hover, .post:focus-within) .title {
        --fill: var(--gradient-pop-1);
    }
    .post :global(a) {
        z-index: 1;
    }
    .overlay {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: block;
        z-index: 0;
    }

		:root {
			scroll-padding-top: 10rem;
			background: var(--color-tan);
		}
		:global(#content) {
			min-height: 100vh;
			padding: 4rem 0;
		}
		.article {
			max-width: 48rem;
			padding-bottom: 2rem;
			display: flex;
			flex-flow: column nowrap;
			font-family: var(--font-body);
			font-size: var(--size-500);
			line-height: 1.3;
			color: var(--color-midnight);
			z-index: 1;
		}
		:where(.article > :global(* + *)) {
			margin-top: 1em;
		}
		.article :is(h2):not([class]) {
			margin-top: 3em;
		}
		.article > :global(.note:last-child) {
			margin-top: 8rem;
		}
		.hero {
			display: flex;
			flex-flow: row wrap;
			padding: 3rem 0 2rem;
			max-width: 100%;
		}
</style>
